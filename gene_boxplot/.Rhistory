if(is.ultrametric(tre)) {
utre <- tre
} else{
utre <- chronos(tre)
}
write.tree(utre, 'SpeciesTree_rooted_ultra_copy.txt')
test2 <- mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="GO",
keytype="FLYBASE",
multiVals="first")
test2 <- mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="ONTOLOGY",
keytype="FLYBASE",
multiVals="first")
test2 <- mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="SYMBOL",
keytype="FLYBASE",
multiVals="first")
multivals
multiVals
multiVals(org.Dm.eg.db)
columns(org.Dm.eg.db)
test2 <- mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="SYMBOL",
keytype="FLYBASE",
multiVals="all")
test2 <- mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="SYMBOL",
keytype="FLYBASE",
multiVals="CharacterList")
View(test2)
test2 <- mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="GOALL",
keytype="FLYBASE",
multiVals="CharacterList")
View(test2)
all_cells_tpm$GO <- mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="GOALL",
keytype="FLYBASE",
multiVals="CharacterList")
View(all_cells_tpm)
txi.rsem <- tximport(files, type = "rsem", txIn = FALSE, txOut = FALSE) # genes
head(txi.rsem$abundance)    # visualize the dataframe created
all_cells_tpm <- as.data.frame(txi.rsem$abundance) # can also get counts, but abundance is normalized
# These lines of code take the filename
all_cells_tpm$name =   mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="GENENAME",
keytype="FLYBASE",
multiVals="first")
all_cells_tpm$symbol <- mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="SYMBOL",
keytype="FLYBASE",
multiVals="first")
test2 <- mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="GOALL",
keytype="FLYBASE",
multiVals="CharacterList")
View(test2)
View(test2)
View(test2)
test2$listData
test2
test2[["FBgn0000003"]]
type(test2[["FBgn0000003"]])
paste(test, collapse = '')
test2 <- paste(test, collapse = '')
test <- paste(mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="GOALL",
keytype="FLYBASE",
multiVals="CharacterList"), collapse = ';')
View(txi.rsem)
test <- mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="GOALL",
keytype="FLYBASE",
multiVals="CharacterList")
View(test)
lengths(test)
for (p in test) {
print(p)
}
for (p in all_cells_tpm) {
print(p)
}
View(test)
View(all_cells_tpm)
print(p$name)
for (p in all_cells_tpm$slow1) {
print(p)
}
for (p in all_cells_tpm) {
print(p)
}
for (p in row.names(all_cells_tpm)) {
print(p)
}
print(test2[[p]])
print(test[[p]])
print(test[p)
print(test[p])
View(test)
for (p in row.names(all_cells_tpm)) {
print(test[p])
}
print(test[[p]])
for (p in row.names(all_cells_tpm)) {
print(test[[p]])
}
for (p in row.names(all_cells_tpm)) {
print(past(test[[p]], collapse=';'))
}
for (p in row.names(all_cells_tpm)) {
print(paste(test[[p]], collapse=';'))
}
test[1]
test[[1]]
all_cells_tpm <- as.data.frame(txi.rsem$abundance) # can also get counts, but abundance is normalized
# These lines of code take the filename
all_cells_tpm$name =   mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="GENENAME",
keytype="FLYBASE",
multiVals="first")
all_cells_tpm$symbol <- mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="SYMBOL",
keytype="FLYBASE",
multiVals="first")
test <- mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="GOALL",
keytype="FLYBASE",
multiVals="CharacterList")
all_cells_tpm$GO <- all_cells_tpm$symbol
for (i in 1:length(new_values)) {
all_cells_tpm$GO[i] <- paste(test[[i]], collapse=';')
}
length(all_cells_tpm)
length(test)
for (i in 1:length(test)) {
all_cells_tpm$GO[i] <- paste(test[[i]], collapse=';')
}
View(test)
View(all_cells_tpm)
all_cells_tpm <- as.data.frame(txi.rsem$abundance) # can also get counts, but abundance is normalized
# These lines of code take the filename
all_cells_tpm$name =   mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="GENENAME",
keytype="FLYBASE",
multiVals="first")
all_cells_tpm$symbol <- mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="SYMBOL",
keytype="FLYBASE",
multiVals="first")
test <- mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="GOALL",
keytype="FLYBASE",
multiVals="CharacterList")
for (i in 1:length(test)) {
all_cells_tpm$GO[i] <- paste(test[[i]], collapse=';')
}
View(all_cells_tpm)
columns(org.Dm.eg.db)
all_cells_tpm$test =   mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="MAP",
keytype="FLYBASE",
multiVals="first")
View(all_cells_tpm)
your_data <- read.delim("best_gene_summary_fb_2023_04.tsv", header = TRUE)
dir = dirname(getActiveDocumentContext()$path)
setwd(dir)
your_data <- read.delim("best_gene_summary_fb_2023_04.tsv", header = TRUE)
View(your_data)
library(readr)
your_data <- read_tsv(("best_gene_summary_fb_2023_04.tsv", header = TRUE)
your_data <- read_tsv("best_gene_summary_fb_2023_04.tsv", header = TRUE)
your_data <- read_tsv("best_gene_summary_fb_2023_04.tsv")
your_data <- read.delim("best_gene_summary_fb_2023_04.tsv", sep="\t")
your_data <- read.delim("best_gene_summary_fb_2023_04.tsv",skip = 21, header = FALSE, sep="\t")
View(your_data)
your_data <- read.delim("best_gene_summary_fb_2023_04.tsv",skip = 6, header = FALSE, sep="\t")
your_data <- read.delim("best_gene_summary_fb_2023_04.tsv",skip = 5, header = FALSE, sep="\t")
your_data <- read.delim("best_gene_summary_fb_2023_04.tsv",skip = 4, header = FALSE, sep="\t")
View(your_data)
your_data <- read.delim("best_gene_summary_fb_2023_04.tsv",skip = 9, header = FALSE, sep="\t")
View(your_data)
your_data <- read.delim("best_gene_summary_fb_2023_04.tsv",skip = 8, header = FALSE, sep="\t")
View(your_data)
your_data <- read.delim("best_gene_summary_fb_2023_04.tsv",skip = 8, sep="\t")
View(your_data)
colnames(all_cells_tpm)[0] <- “new_col_name_at_col_indx”
colnames(all_cells_tpm)[0] <- "new_col_name_at_col_indx
# These lines of code take the filename
all_cells_tpm$name =   mapIds(org.Dm.eg.db,
keys=row.names(all_cells_tpm),
column="GENENAME",
colnames(all_cells_tpm)[0] <- "new_col_name_at_col_indx"
View(all_cells_tpm)
all_cells_tpm$ID <- row.names(all_cells_tpm)
View(all_cells_tpm)
all_cells_tpm <- as.data.frame(txi.rsem$abundance) # can also get counts, but abundance is normalized
all_cells_tpm$ID <- row.names(all_cells_tpm)
row.names(all_cells_tpm) <- NULL
View(all_cells_tpm)
df$ID <- row.names(df)
df <- cbind(ID = row.names(df), df)
df <- as.data.frame(txi.rsem$abundance) # can also get counts, but abundance is normalized
df <- cbind(ID = row.names(df), df)
View(df)
row.names(df) <- NULL
View(your_data)
View(df)
head(txi.rsem$abundance)    # visualize the dataframe created
df <- as.data.frame(txi.rsem$abundance) # can also get counts, but abundance is normalized
df <- cbind(ID = row.names(df), df)
row.names(df) <- NULL
# These lines of code take the filename
df$name =   mapIds(org.Dm.eg.db,
keys=df$ID,
column="GENENAME",
keytype="FLYBASE",
multiVals="first")
df$symbol <- mapIds(org.Dm.eg.db,
keys=df$ID,
column="SYMBOL",
keytype="FLYBASE",
multiVals="first")
test <- mapIds(org.Dm.eg.db,
keys=df$ID,
column="GOALL",
keytype="FLYBASE",
multiVals="CharacterList")
for (i in 1:length(test)) {
df$GO[i] <- paste(test[[i]], collapse=';')
}
View(df)
your_data <- read.delim("best_gene_summary_fb_2023_04.tsv",skip = 8, sep="\t")
colnames(your_data)[0] <- "ID"
View(your_data)
colnames(your_data)[1] <- "ID"
View(your_data)
View(your_data)
merged_df <- merge(df, your_data, by = "ID", all = TRUE)
View(merged_df)
library(tidyr)
merged_df %>% drop_na(colnames(your_data)[2])
drop_na(colnames(your_data)[2])
df_cleaned <- na.omit(merged_df)
View(df_cleaned)
df <- merge(df, your_data, by = "ID", all = TRUE)
View(df)
df2 <- read.delim("best_gene_summary_fb_2023_04.tsv",skip = 8, sep="\t")
colnames(df2)[1] <- "ID"
df2 <- df2[, -c(2)]
View(df2)
df2 <- read.delim("best_gene_summary_fb_2023_04.tsv",skip = 8, sep="\t")
colnames(df2)[1] <- "ID"
df2 <- df2[, -c(2,3)]
View(df2)
df <- as.data.frame(txi.rsem$abundance) # can also get counts, but abundance is normalized
df <- cbind(ID = row.names(df), df)
row.names(df) <- NULL
# These lines of code take the filename
df$name =   mapIds(org.Dm.eg.db,
keys=df$ID,
column="GENENAME",
keytype="FLYBASE",
multiVals="first")
df$symbol <- mapIds(org.Dm.eg.db,
keys=df$ID,
column="SYMBOL",
keytype="FLYBASE",
multiVals="first")
df2 <- read.delim("best_gene_summary_fb_2023_04.tsv",skip = 8, sep="\t")
colnames(df2)[1] <- "ID"
df2 <- df2[, -c(2,3)]
df <- merge(df, df2, by = "ID", all = TRUE)
df_cleaned <- df[complete.cases(df[columns_to_check, ]), ]
# merge the dataframes and clean
df <- merge(df, df2, by = "ID", all = TRUE)
df_cleaned <- df[complete.cases(df[2, ]), ]
View(df_cleaned)
View(df)
df_cleaned <- df[complete.cases(df[2 ]), ]
rm(list=ls())
library(rstudioapi)
library(tximport)
library(AnnotationDbi)
library(org.Dm.eg.db)
library(readr)
library(tidyr)
dir = dirname(getActiveDocumentContext()$path)
setwd(dir)
# Insert file names here as such
fs = c("49B06C","49B06D","49B06I","19428F","19428I","19428J",
"22C06-3_S1","22C06-4_S2","22C06-5_S3","22C06-6_S4",
"PF1_S5","PF2_S6","PF3_S7","PF4_S8","dm502","dm503","dm506")
files <- file.path(dir, paste0(fs, ".genes.results"))
# characterizes cells based on what they are
names(files) <- c(paste0('slow', 1:3), paste0('fast', 1:3), paste0('22c06_', 1:4),
paste0('PF', 1:4), paste0('AC', 1:3))
txi.rsem <- tximport(files, type = "rsem", txIn = FALSE, txOut = FALSE) # genes
head(txi.rsem$abundance)    # visualize the dataframe created
df <- as.data.frame(txi.rsem$abundance) # can also get counts, but abundance is normalized
df <- cbind(ID = row.names(df), df)
row.names(df) <- NULL
# These lines of code take the filename
df$name =   mapIds(org.Dm.eg.db,
keys=df$ID,
column="GENENAME",
keytype="FLYBASE",
multiVals="first")
df$symbol <- mapIds(org.Dm.eg.db,
keys=df$ID,
column="SYMBOL",
keytype="FLYBASE",
multiVals="first")
# Take in gene summary
df2 <- read.delim("best_gene_summary_fb_2023_04.tsv",skip = 8, sep="\t")
colnames(df2)[1] <- "ID"
df2 <- df2[, -c(2,3)]
# merge the dataframes and clean
df <- merge(df, df2, by = "ID", all = TRUE)
View(df)
df <- as.data.frame(txi.rsem$abundance) # can also get counts, but abundance is normalized
df <- cbind(ID = row.names(df), df)
row.names(df) <- NULL
# These lines of code take the filename
df$name =   mapIds(org.Dm.eg.db,
keys=df$ID,
column="GENENAME",
keytype="FLYBASE",
multiVals="first")
df$symbol <- mapIds(org.Dm.eg.db,
keys=df$ID,
column="SYMBOL",
keytype="FLYBASE",
multiVals="first")
# Take in gene summary
df2 <- read.delim("best_gene_summary_fb_2023_04.tsv",skip = 8, sep="\t")
colnames(df2)[1] <- "ID"
df2 <- df2[, -c(2,3)]
# merge the dataframes and clean
merged_df <- merge(df, df2, by = "ID", all = TRUE)
# merge the dataframes and clean
merged_df <- merge(df, df2, by = "ID", all = TRUE)
merged_df <- merged_df[merged_df$ID %in% df$ID]
View(merged_df)
# merge the dataframes and clean
merged_df <- merge(df, df2, by = "ID", all = TRUE)
View(merged_df)
merged_df$ID %in% df$ID
merged_df <- merged_df[merged_df$ID %in% df$ID]
merged_df$ID %in% df$ID
merged_df <- merged_df[merged_df$ID %in% df$ID, ]
View(merged_df)
# Add GO terms
test <- mapIds(org.Dm.eg.db,
keys=merged_df$ID,
column="GOALL",
keytype="FLYBASE",
multiVals="CharacterList")
merged_df$GO[i] <- paste(test[[i]], collapse=';')
for (i in 1:length(test)) {
merged_df$GO[i] <- paste(test[[i]], collapse=';')
}
# Write to csv file
write.csv(merged_df,file='all_cells_tpm.csv')
rm(list=ls())
library(rstudioapi)
library(tximport)
library(AnnotationDbi)
library(org.Dm.eg.db)
library(readr)
library(tidyr)
dir = dirname(getActiveDocumentContext()$path)
setwd(dir)
# Insert file names here as such
fs = c("49B06C","49B06D","49B06I","19428F","19428I","19428J",
"22C06-3_S1","22C06-4_S2","22C06-5_S3","22C06-6_S4",
"PF1_S5","PF2_S6","PF3_S7","PF4_S8","dm502","dm503","dm506")
files <- file.path(dir, paste0(fs, ".genes.results"))
# characterizes cells based on what they are
names(files) <- c(paste0('slow', 1:3), paste0('fast', 1:3), paste0('22c06_', 1:4),
paste0('PF', 1:4), paste0('AC', 1:3))
# Combines the rsem files into one big dataframe
txi.rsem <- tximport(files, type = "rsem", txIn = FALSE, txOut = FALSE) # genes
head(txi.rsem$abundance)    # visualize the dataframe created
df <- as.data.frame(txi.rsem$abundance) # can also get counts, but abundance is normalized
df <- cbind(ID = row.names(df), df)    change name
row.names(df) <- NULL
# Get Genename and Symbol from Flybase
df$name =   mapIds(org.Dm.eg.db,
keys=df$ID,
column="GENENAME",
keytype="FLYBASE",
multiVals="first")
rm(list=ls())
library(rstudioapi)
library(tximport)
library(AnnotationDbi)
library(org.Dm.eg.db)
library(readr)
library(tidyr)
dir = dirname(getActiveDocumentContext()$path)
setwd(dir)
# Insert file names here as such
fs = c("49B06C","49B06D","49B06I","19428F","19428I","19428J",
"22C06-3_S1","22C06-4_S2","22C06-5_S3","22C06-6_S4",
"PF1_S5","PF2_S6","PF3_S7","PF4_S8","dm502","dm503","dm506")
files <- file.path(dir, paste0(fs, ".genes.results"))
# characterizes cells based on what they are
names(files) <- c(paste0('slow', 1:3), paste0('fast', 1:3), paste0('22c06_', 1:4),
paste0('PF', 1:4), paste0('AC', 1:3))
# Combines the rsem files into one big dataframe
txi.rsem <- tximport(files, type = "rsem", txIn = FALSE, txOut = FALSE) # genes
head(txi.rsem$abundance)    # visualize the dataframe created
df <- as.data.frame(txi.rsem$abundance) # can also get counts, but abundance is normalized
df <- cbind(ID = row.names(df), df)    #change name
row.names(df) <- NULL
# Get Genename and Symbol from Flybase
df$name =   mapIds(org.Dm.eg.db,
keys=df$ID,
column="GENENAME",
keytype="FLYBASE",
multiVals="first")
df$symbol <- mapIds(org.Dm.eg.db,
keys=df$ID,
column="SYMBOL",
keytype="FLYBASE",
multiVals="first")
# Take in gene summary and drop all terms except ID and Summary
df2 <- read.delim("best_gene_summary_fb_2023_04.tsv",skip = 8, sep="\t")
colnames(df2)[1] <- "ID"
df2 <- df2[, -c(2,3)]
# merge the dataframes and keep only GeneIds that were originally in there.
merged_df <- merge(df, df2, by = "ID", all = TRUE)
merged_df <- merged_df[merged_df$ID %in% df$ID, ]
# Add GO terms
test <- mapIds(org.Dm.eg.db,
keys=merged_df$ID,
column="GOALL",
keytype="FLYBASE",
multiVals="CharacterList")
for (i in 1:length(test)) {
merged_df$GO[i] <- paste(test[[i]], collapse=';')
}
# Write to csv file
write.csv(merged_df,file='all_cells_tpm.csv')
#####
View(merged_df)
dir = dirname(getActiveDocumentContext()$path)
setwd(dir)
# Insert file names here as such
fs = c("49B06C","49B06D","49B06I","19428F","19428I","19428J",
"22C06-3_S1","22C06-4_S2","22C06-5_S3","22C06-6_S4",
"PF1_S5","PF2_S6","PF3_S7","PF4_S8","dm502","dm503","dm506")
files <- file.path(dir, paste0("rsemFiles/",fs, ".genes.results"))
# characterizes cells based on what they are
names(files) <- c(paste0('slow', 1:3), paste0('fast', 1:3), paste0('22c06_', 1:4),
paste0('PF', 1:4), paste0('AC', 1:3))
# Combines the rsem files into one big dataframe
txi.rsem <- tximport(files, type = "rsem", txIn = FALSE, txOut = FALSE) # genes
head(txi.rsem$abundance)    # visualize the dataframe created
df <- as.data.frame(txi.rsem$abundance) # can also get counts, but abundance is normalized
df <- cbind(ID = row.names(df), df)    #change name
row.names(df) <- NULL
# Get Genename and Symbol from Flybase
df$name =   mapIds(org.Dm.eg.db,
keys=df$ID,
column="GENENAME",
keytype="FLYBASE",
multiVals="first")
df$symbol <- mapIds(org.Dm.eg.db,
keys=df$ID,
column="SYMBOL",
keytype="FLYBASE",
multiVals="first")
# Take in gene summary and drop all terms except ID and Summary
df2 <- read.delim("best_gene_summary_fb_2023_04.tsv",skip = 8, sep="\t")
colnames(df2)[1] <- "ID"
df2 <- df2[, -c(2,3)]
# merge the dataframes and keep only GeneIds that were originally in there.
merged_df <- merge(df, df2, by = "ID", all = TRUE)
merged_df <- merged_df[merged_df$ID %in% df$ID, ]
# Add GO terms
test <- mapIds(org.Dm.eg.db,
keys=merged_df$ID,
column="GOALL",
keytype="FLYBASE",
multiVals="CharacterList")
for (i in 1:length(test)) {
merged_df$GO[i] <- paste(test[[i]], collapse=';')
}
# Write to csv file
write.csv(merged_df,file='all_cells_tpm.csv')
#####
