library(rstudioapi)
library(tximportData)
library(tximport)
library(DESeq2)
library(AnnotationDbi)
library(org.Dm.eg.db)
library(ggplot2)
library(rstudioapi)
library(tximportData)
BiocManager::install("tximportData")
library(tximportData)
library(tximport)
library(DESeq2)
library(AnnotationDbi)
library(org.Dm.eg.db)
library(ggplot2)
library(rstudioapi)
library(tximportData)
library(tximport)
library(DESeq2)
library(AnnotationDbi)
library(org.Dm.eg.db)
library(ggplot2)
dir = dirname(getActiveDocumentContext()$path)
setwd(dir)
mode = 'genes'
fs = c("c1","c2","c3","i1","i2","i3")
type1 = "c"
type2 = "i"
num1 = 3
num2 = 3
if (mode == 'genes'){
files <- file.path(dir, paste0(fs, ".genes.results"))
names(files) <- c(paste0(type1, 1:num1), paste0(type2, 1:num2))
txi.rsem <- tximport(files, type = "rsem", txIn = FALSE, txOut = FALSE) # genes
txi.rsem$length[txi.rsem$length == 0] <- 1 # genes
} else if(mode == 'tr'){
files <- file.path(dir, paste0(fs, ".isoforms.results"))
names(files) <- c(paste0(type1, 1:num1), paste0(type2, 1:num2))
txi.rsem <- tximport(files, type = "rsem", txIn = TRUE, txOut = TRUE) # isoforms
}
files
head(txi.rsem$counts)
type1 = "control"
type2 = "cold"
num1 = 3
num2 = 3
if (mode == 'genes'){
files <- file.path(dir, paste0(fs, ".genes.results"))
names(files) <- c(paste0(type1, 1:num1), paste0(type2, 1:num2))
txi.rsem <- tximport(files, type = "rsem", txIn = FALSE, txOut = FALSE) # genes
txi.rsem$length[txi.rsem$length == 0] <- 1 # genes
} else if(mode == 'tr'){
files <- file.path(dir, paste0(fs, ".isoforms.results"))
names(files) <- c(paste0(type1, 1:num1), paste0(type2, 1:num2))
txi.rsem <- tximport(files, type = "rsem", txIn = TRUE, txOut = TRUE) # isoforms
}
head(txi.rsem$counts)
mode = 'genes'
fs = c("c1","c2","c3","i1","i2","i3")
type1 = "control"
type2 = "cold"
num1 = 3
num2 = 3
if (mode == 'genes'){
files <- file.path(dir, paste0(fs, ".genes.results"))
names(files) <- c(paste0(type1, 1:num1), paste0(type2, 1:num2))
txi.rsem <- tximport(files, type = "rsem", txIn = FALSE, txOut = FALSE) # genes
txi.rsem$length[txi.rsem$length == 0] <- 1 # genes
} else if(mode == 'tr'){
files <- file.path(dir, paste0(fs, ".isoforms.results"))
names(files) <- c(paste0(type1, 1:num1), paste0(type2, 1:num2))
txi.rsem <- tximport(files, type = "rsem", txIn = TRUE, txOut = TRUE) # isoforms
}
if (mode == 'genes'){
files <- file.path(dir, paste0(fs, ".genes.results"))
names(files) <- c(paste0(type1, 1:num1), paste0(type2, 1:num2))
print('yes')
txi.rsem <- tximport(files, type = "rsem", txIn = FALSE, txOut = FALSE) # genes
txi.rsem$length[txi.rsem$length == 0] <- 1 # genes
} else if(mode == 'tr'){
print('no')
files <- file.path(dir, paste0(fs, ".isoforms.results"))
names(files) <- c(paste0(type1, 1:num1), paste0(type2, 1:num2))
txi.rsem <- tximport(files, type = "rsem", txIn = TRUE, txOut = TRUE) # isoforms
}
txi.rsem <- tximport(files, type = "rsem", txIn = FALSE, txOut = FALSE) # genes
clear
clc
rm(list = ())
rm(list=ls())
library(rstudioapi)
library(tximportData)
library(tximport)
library(DESeq2)
library(AnnotationDbi)
library(org.Dm.eg.db)
library(ggplot2)
dir = dirname(getActiveDocumentContext()$path)
setwd(dir)
mode = 'genes'
fs = c("c1","c2","c3","i1","i2","i3")
type1 = "control"
type2 = "cold"
num1 = 3
num2 = 3
if (mode == 'genes'){
files <- file.path(dir, paste0(fs, ".genes.results"))
names(files) <- c(paste0(type1, 1:num1), paste0(type2, 1:num2))
txi.rsem <- tximport(files, type = "rsem", txIn = FALSE, txOut = FALSE) # genes
txi.rsem$length[txi.rsem$length == 0] <- 1 # genes
} else if(mode == 'tr'){
files <- file.path(dir, paste0(fs, ".isoforms.results"))
names(files) <- c(paste0(type1, 1:num1), paste0(type2, 1:num2))
txi.rsem <- tximport(files, type = "rsem", txIn = TRUE, txOut = TRUE) # isoforms
}
library(rstudioapi)
library(ChIPseeker)
library(clusterProfiler)
library(org.Dm.eg.db)
library(TxDb.Dmelanogaster.UCSC.dm6.ensGene)
library(IRanges)
library(GenomicRanges)
# Set working directory to file
dir = dirname(getActiveDocumentContext()$path)
setwd(dir)
# Preload data
txdb <- TxDb.Dmelanogaster.UCSC.dm6.ensGene
peaks <- readPeakFile('suvar_combined_peaks.filtered.bed')
# Filter our small chromosomes(?)
chroms_to_keep <- c("2L", "2R", "3L", "3R", "X", "4")
peaks <- keepSeqlevels(peaks, chroms_to_keep, pruning.mode = "coarse")
# Change names to match with txdb
seqlevels(peaks) <- paste0("chr", seqlevels(peaks))
# Annotate the peaks
peakAnno <- annotatePeak(peaks, tssRegion=c(-1000, 1000), TxDb=txdb, annoDb="org.Dm.eg.db")
peakAnnoDf <- as.data.frame(peakAnno)
write.csv(peakAnnoDf, "peakAnno.csv")
# Plots
covplot(peaks, weightCol="V5")
plotAnnoPie(peakAnno)
View(peakAnnoDf)
entrezids <- peakAnnoDf$ENTREZID %>%
unique()
entrezids <- peakAnnoDf$ENTREZID %>%
ego <- enrichGO(gene = entrezids,
keyType = "ENTREZID",
OrgDb = org.Hs.eg.db,
ont = "BP",
pAdjustMethod = "BH",
qvalueCutoff = 0.05,
readable = TRUE)
entrezids <- peakAnnoDf$ENTREZID
ego <- enrichGO(gene = entrezids,
keyType = "ENTREZID",
OrgDb = org.Hs.eg.db,
ont = "BP",
pAdjustMethod = "BH",
qvalueCutoff = 0.05,
readable = TRUE)
ego <- enrichGO(gene = entrezids,
keyType = "ENTREZID",
OrgDb = org.Dm.eg.db,
ont = "BP",
pAdjustMethod = "BH",
qvalueCutoff = 0.05,
readable = TRUE)
View(ego)
head(ego)
dotplot(ego, font.size = 8, title = data_name, label_format = 50, showCategory = 20)
dotplot(ego, font.size = 8, title = 'data_name', label_format = 50, showCategory = 20)
dotplot(ego, font.size = 8, title = 'data_name', label_format = 50, showCategory = 10)
dotplot(ego, font.size = 8, title = 'data_name', label_format = 50, showCategory = 100)
10
dotplot(ego, font.size = 8, title = 'data_name', label_format = 50, showCategory = 10)
dotplot(ego, font.size = 8, title = 'Suvar', label_format = 50, showCategory = 10)
# GO cluster analysis
entrezids <- peakAnnoDf$ENTREZID %>% unique()
ego <- enrichGO(gene = entrezids,
keyType = "ENTREZID",
OrgDb = org.Dm.eg.db,
ont = "BP",
pAdjustMethod = "BH",
qvalueCutoff = 0.05,
readable = TRUE)
dotplot(ego, font.size = 8, title = 'Suvar', label_format = 50, showCategory = 10)
# GO cluster analysis
entrezids <- peakAnnoDf$ENTREZID
ego2 <- enrichGO(gene = entrezids,
keyType = "ENTREZID",
OrgDb = org.Dm.eg.db,
ont = "BP",
pAdjustMethod = "BH",
qvalueCutoff = 0.05,
readable = TRUE)
dotplot(ego2, font.size = 8, title = 'Suvar', label_format = 50, showCategory = 10)
dotplot(ego, font.size = 8, title = 'Suvar', label_format = 50, showCategory = 10)
View(ego)
ego@result[["qvalue"]]
View(ego)
View(ego2)
View(ego)
significant_go <- subset(ego@result, p.adjust < 0.05)
# Count the number of significant terms
num_significant <- nrow(significant_go)
print(num_significant)
View(ego)
ego@result[["p.adjust"]]
# Count the number of significant terms
significant_go <- subset(ego@result, p.adjust < 0.05)
num_significant <- nrow(significant_go)
print(num_significant)
